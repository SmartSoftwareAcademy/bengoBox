// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hrapi.Data;

#nullable disable

namespace hrapi.Migrations
{
    [DbContext(typeof(HRData))]
    [Migration("20230221115817_init003")]
    partial class init003
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("hrapi.Models.Employee.Benefits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("OfficialEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OfficialPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PersonalEmail")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Contracts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ContractDuration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("MonthlySalary")
                        .HasColumnType("double");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Deductions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double?>("EmployerAmount")
                        .HasColumnType("double");

                    b.Property<double?>("EmployerRate")
                        .HasColumnType("double");

                    b.Property<double?>("PaidToDate")
                        .HasColumnType("double");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentDepartmentsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentDepartmentsId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Earnings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Earnings");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DoB")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("NHIF_NO")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NSSF_NO")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nationa_ID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Pin_NO")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ResidentialDetails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkShiftId")
                        .HasColumnType("int");

                    b.Property<bool>("deletestatus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("WorkShiftId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("hrapi.Models.Employee.EmployeeImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeImages");
                });

            modelBuilder.Entity("hrapi.Models.Employee.HRDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ContractsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofEmployment")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("HeadOfDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReportsToEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractsId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("HRDetails");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Loans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FringeBenefitTax")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Installments")
                        .HasColumnType("double");

                    b.Property<string>("InterestFormula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Issuedate")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Rate")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("hrapi.Models.Employee.NextOfKin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ParentDepartments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ParentDepartments");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ParentRegions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ParentRegions");
                });

            modelBuilder.Entity("hrapi.Models.Employee.PaymentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BankAccountNo")
                        .HasColumnType("longtext");

                    b.Property<string>("BankBranch")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentOption")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PaymentData");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Regions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentRegionsId")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ParentRegionsId")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("hrapi.Models.Employee.SalaryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("DailyRate")
                        .HasColumnType("double");

                    b.Property<bool>("DeductNHIF")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DeductNSSF")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("DisabilityExcemptionAmount")
                        .HasColumnType("double");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ExcemptionCertNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("double");

                    b.Property<string>("IncomeTax")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("MonthlySalary")
                        .HasColumnType("double");

                    b.Property<string>("OffDays")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PaymentCurrency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("SalaryProcessingOptionId")
                        .HasColumnType("int");

                    b.Property<int>("WorkHours")
                        .HasColumnType("int");

                    b.Property<int?>("WorkShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("SalaryProcessingOptionId");

                    b.HasIndex("WorkShiftId");

                    b.ToTable("SalaryDetails");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ShiftRotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BreakForDays")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentWorkShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextChangeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PrevWorkShiftId")
                        .HasColumnType("int");

                    b.Property<int>("RunforDays")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("deletestatus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ShiftRotations");
                });

            modelBuilder.Entity("hrapi.Models.Employee.WorkShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BreakHours")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Friday")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HoursPerWeek")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Monday")
                        .HasMaxLength(10)
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Saturday")
                        .HasColumnType("time(6)");

                    b.Property<int>("ShiftRotationId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeSpan>("Sunday")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Thursday")
                        .HasColumnType("time(6)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TuesDay")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Wednesday")
                        .HasColumnType("time(6)");

                    b.Property<int>("WorkHours")
                        .HasColumnType("int");

                    b.Property<bool>("deletestatus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ShiftRotationId");

                    b.ToTable("WorkShifts");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Benefits", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ContactDetails", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithOne("ContactDetails")
                        .HasForeignKey("hrapi.Models.Employee.ContactDetails", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Contracts", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Deductions", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Departments", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrapi.Models.Employee.ParentDepartments", "ParentDepartments")
                        .WithOne("Departments")
                        .HasForeignKey("hrapi.Models.Employee.Departments", "ParentDepartmentsId");

                    b.Navigation("ParentDepartments");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Earnings", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Employee", b =>
                {
                    b.HasOne("hrapi.Models.Employee.WorkShift", "WorkShift")
                        .WithMany()
                        .HasForeignKey("WorkShiftId");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("hrapi.Models.Employee.EmployeeImage", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithOne("EmployeeImage")
                        .HasForeignKey("hrapi.Models.Employee.EmployeeImage", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.HRDetails", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Contracts", "Contracts")
                        .WithMany()
                        .HasForeignKey("ContractsId");

                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithOne("HRDetails")
                        .HasForeignKey("hrapi.Models.Employee.HRDetails", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contracts");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Loans", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.NextOfKin", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "employee")
                        .WithMany("nextOfKins")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.PaymentData", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Projects", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Regions", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrapi.Models.Employee.ParentRegions", "ParentRegions")
                        .WithOne("Regions")
                        .HasForeignKey("hrapi.Models.Employee.Regions", "ParentRegionsId");

                    b.Navigation("ParentRegions");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("hrapi.Models.Employee.SalaryDetails", b =>
                {
                    b.HasOne("hrapi.Models.Employee.Employee", "Employee")
                        .WithOne("SalaryDetails")
                        .HasForeignKey("hrapi.Models.Employee.SalaryDetails", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrapi.Models.Employee.PaymentData", "SalaryProcessingOption")
                        .WithMany()
                        .HasForeignKey("SalaryProcessingOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrapi.Models.Employee.WorkShift", "WorkShift")
                        .WithMany()
                        .HasForeignKey("WorkShiftId");

                    b.Navigation("Employee");

                    b.Navigation("SalaryProcessingOption");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("hrapi.Models.Employee.WorkShift", b =>
                {
                    b.HasOne("hrapi.Models.Employee.ShiftRotation", "ShiftRotation")
                        .WithMany("workShifts")
                        .HasForeignKey("ShiftRotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftRotation");
                });

            modelBuilder.Entity("hrapi.Models.Employee.Employee", b =>
                {
                    b.Navigation("ContactDetails");

                    b.Navigation("EmployeeImage");

                    b.Navigation("HRDetails");

                    b.Navigation("SalaryDetails");

                    b.Navigation("nextOfKins");
                });

            modelBuilder.Entity("hrapi.Models.Employee.ParentDepartments", b =>
                {
                    b.Navigation("Departments")
                        .IsRequired();
                });

            modelBuilder.Entity("hrapi.Models.Employee.ParentRegions", b =>
                {
                    b.Navigation("Regions")
                        .IsRequired();
                });

            modelBuilder.Entity("hrapi.Models.Employee.ShiftRotation", b =>
                {
                    b.Navigation("workShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
